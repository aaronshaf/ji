name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.17

    - name: Install dependencies
      run: bun install

    - name: Run type checking
      run: bun run typecheck

    - name: Run linting and formatting check with zero warnings policy
      run: |
        echo "Running linting and formatting check..."
        bunx biome check . 2>&1 | tee biome-output.txt
        BIOME_EXIT_CODE=$?
        
        # Check for warnings
        if grep -q "Found [0-9]* warning" biome-output.txt; then
          echo "❌ Biome found warnings. All warnings must be resolved."
          cat biome-output.txt
          exit 1
        fi
        
        if [ $BIOME_EXIT_CODE -ne 0 ]; then
          echo "❌ Biome found errors or formatting issues."
          echo "Run 'bun run lint:fix' locally to fix issues."
          cat biome-output.txt
          exit 1
        fi
        
        echo "✅ Linting and formatting check passed with zero warnings"

    - name: Check file sizes
      run: |
        echo "Checking file sizes..."
        bun run check-file-sizes

  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.17

    - name: Install dependencies
      run: bun install

    - name: Run tests with coverage
      run: |
        echo "Running tests with coverage..."
        bun run test:coverage:report
      continue-on-error: true  # Tests don't exist yet, but we want to show they run

    - name: Check test coverage thresholds
      run: |
        echo "Checking test coverage thresholds..."
        bun run test:coverage:check

    - name: Check CLI can run
      run: bun run src/cli.ts --help

  all-checks:
    name: All Checks Summary
    runs-on: ubuntu-latest
    needs: [quality, test]
    if: always()
    
    steps:
    - name: Summary
      run: |
        echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
        
        # Quality checks
        if [ "${{ needs.quality.result }}" == "success" ]; then
          echo "| Quality (TypeScript, Linting, File Sizes) | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Quality (TypeScript, Linting, File Sizes) | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Test checks
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "| Tests & Coverage | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Tests & Coverage | ⚠️ Failed (allowed) |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Enforcement Policy:**" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ TypeScript type checking: Required" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Zero biome warnings: Required" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ File size limits: Required" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Test coverage: 1% threshold (using Bun native coverage)" >> $GITHUB_STEP_SUMMARY